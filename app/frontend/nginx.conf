http {
  # Map backend server to llm-app-network
  upstream llm-app-network {
    server backend:8000;
  }
  include mime.types;

  # Prevent some methods of IP spoofing
  set_real_ip_from        0.0.0.0/0; # Change this to the CIDR range of trusted addresses 
  real_ip_recursive       on;
  real_ip_header          X-Forward-For;
  # Rate limiting
  limit_req_zone          $binary_remote_addr zone=mylimit:10m rate=10r/s;

  server {
    listen 443 ssl;
    http2 on;
    # server_name localhost; #if deploying locally
    server_name 86.50.253.176;
    root /proxy;
    # Rate limiting configs
    limit_req zone=mylimit burst=70 nodelay;

    ssl_certificate /etc/nginx/ssl/cert.pem;
    ssl_certificate_key /etc/nginx/ssl/key.pem;
    ssl_session_timeout 1d;
    ssl_session_cache shared:SharedNixCraftSSL:10m;
    ssl_session_tickets off;

    # Only support TLS v1.3
    ssl_protocols TLSv1.3;
    ssl_prefer_server_ciphers off;
    
    # HSTS - works for authentic ssl_certificates, not self-signed.
    #add_header Strict-Transport-Security "max-age=63072000;
    #includeSubDomains" always;

    # OCSP stapling (checks revocation status of ssl_certificate)
    ssl_stapling on;
    ssl_stapling_verify on;

    ssl_trusted_certificate /etc/nginx/ssl/cert.pem;
    # Google DNS resolver
    resolver 8.8.8.8;
    # Add CSP to mitigate XSS and Data Injections
    add_header Content-Security-Policy "default-src 'self';" frame-ancestors 'none'; always;

    location / {
            root   /usr/share/nginx/html;
            index  index.html index.htm;
            try_files $uri /index.html;   
        }
    location /chat {
            # Only allow access to this resource from specified origin(s).
            add_header 'Access-Control-Allow-Origin' 'https://86.50.253.176';
            # Only allow POST requests
            add_header 'Access-Control-Allow-Methods' 'POST';
            
            # Increase connection timeout duration to accomodate loading model filters on first
            # request after app initialization.
            proxy_read_timeout 900;
            # Pass chat requests to backend api endpoint.
            proxy_pass https://llm-app-network;
    }

    error_page   500 502 503 504  /50x.html;
    location = /50x.html {
        root   /usr/share/nginx/html;
    }
  }
  server {
    # HTTP port
    listen 80;
    server_name 86.50.253.176; # Make sure this matches the one on the HTTPS server block
    # Redirect to HTTPS
    return 301 https://$host$request_uri;

  }
}

events {}